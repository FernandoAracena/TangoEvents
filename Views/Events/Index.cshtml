@using System.Security.Claims;
@{
    var cultureInfo = System.Globalization.CultureInfo.CurrentCulture;
}

@model IEnumerable<Event>

@{
    ViewData["Title"] = "Tango Events";
    ViewData["Description"] = "Welcome to TangoEvents - Your cultural agenda platform for managing and exploring milongas, concerts, practices, classes, and courses in Oslo, Norway.";
}

@{
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <div class="col">
            <div class="text-center">
                <h1 class="display-4">Kalender</h1>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="text-center my-3">
                    <a class="btn btn-primary" asp-controller="Events" asp-action="Create">Create a New Class or Event</a>
                </div>
            }

            <form asp-controller="Events" asp-action="Index" method="get">
                <div class="text-center my-3">
                    <input type="submit" name="eventType" value="Events" autocomplete="off" class="btn btn-outline-primary @if ((string)ViewData["EventType"] == "Events") {
                    <text>active</text>
                    }" />
                    <input type="submit" name="eventType" value="Classes" autocomplete="off" class="btn btn-outline-info @if ((string)ViewData["EventType"] == "Classes") {
                    <text>active</text>
                    }" />
                </div>
                <hr />

                @if ((string)ViewData["EventType"] == "Classes")
                {
                    <div class="text-center my-3">
                        <input type="hidden" name="eventType" value="@ViewData["EventType"]" />
                        <input type="submit" name="subEventType" value="Class" autocomplete="off" class="btn btn-outline-info @(ViewData["subEventType"].ToString() == "Class" ? "active" : "")" />
                        <input type="hidden" name="eventType" value="@ViewData["EventType"]" />
                        <input type="submit" name="subEventType" value="Course" autocomplete="off" class="btn btn-outline-primary @(ViewData["subEventType"].ToString() == "Course" ? "active" : "")" />
                    </div>

                    @if ((string)ViewData["subEventType"] == "Course")
                    {
                        <div class="text-center my-3">
                            <input type="hidden" name="subEventType" value="Course" />
                            <button type="submit" name="upcomingCourses" value="true" class="btn btn-outline-success @(Convert.ToBoolean(ViewData["UpcomingCourses"]) ? "active" : "")">Upcoming Courses</button>
                            <button type="submit" name="upcomingCourses" value="false" class="btn btn-outline-danger @(Convert.ToBoolean(ViewData["UpcomingCourses"]) ? "" : "active")">Started Courses</button>
                        </div>
                    }
                }

            </form>

            <table class="table" summary="List of Events">
                <caption style="display: none;">List of Events</caption>
                <thead style="display: none;">
                    <tr>
                        <th scope="col">Event Name</th>
                        <th scope="col">Event Type</th>
                        <th scope="col">Start Time</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var eventDate in (List<string>)ViewData["EventDates"])
                    {
                        var eventsOnDate = Model.Where(e => e.Date == eventDate).ToList();
                        if (eventsOnDate.Any())
                        {
                            <tr>
                                <td colspan="4" class="text-left">
                                    <h4 style="color: goldenrod">@cultureInfo.TextInfo.ToTitleCase(DateTime.ParseExact(eventDate, "dd-MM-yyyy", null).ToString("dddd"))</h4>
                                    <h6 style="color: darkgoldenrod">
                                        @DateTime.ParseExact(eventDate, "dd-MM-yyyy", null).ToString("MMMM").ToUpper()
                                        @DateTime.ParseExact(eventDate, "dd-MM-yyyy", null).ToString("dd")
                                    </h6>
                                </td>
                            </tr>

                            @foreach (var item in eventsOnDate)
                            {
                                <tr class="table-row">
                                    <td>
                                            @Html.DisplayFor(modelItem => item.EventName)

                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TypeEvent)
                                        @if (item.TypeEvent == "Course" && DateTime.ParseExact(item.Date, "dd-MM-yyyy", null) < DateTime.Now)
                                        {
                                            <div class="alert alert-dismissible alert-warning">
                                                <h4 class="alert-heading">Already Started!</h4>
                                                <p class="mb-0">Please contact the organizer and ask if you can Drop-In.</p>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Starts)
                                    </td>
                                    <td>
                                        <a href="#" class="event-toggle"><i class="fa-solid fa-plus"></i></a>
                                    </td>
                                </tr>
                                <tr class="card-info-row" style="display: none;">
                                    <td colspan="4">
                                        <div class="card border-info mb-3 event-details" style="border: none;" tabindex="0">
                                        <div class="card-body">
                                            <p class="card-text">
                                                    <strong>@Html.DisplayFor(modelItem => item.EventName)</strong>
                                                </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.TypeEvent)
                                            </p>
                                            <p class="card-text" style="text-align: justify;">
                                                @Html.DisplayFor(model => item.Description)
                                            </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.Organizer)
                                            </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.Address)
                                            </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.Date)
                                            </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.Starts)
                                            </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.Ends)
                                            </p>
                                            <p class="card-text">
                                                @Html.DisplayFor(model => item.Price)
                                            </p>
                                            <a href="#" class="price-toggle"><i class="fa-solid fa-chevron-up" ></i></a>
                                        </div>
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                            if (User.IsInRole("Admin") || item.CreatedBy == userId)
                                            {
                                                <div class="card-footer text-right">

                                                    <a asp-controller="Events" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary" aria-label="Edit Event"><i class="fa-solid fa-pen-to-square"></i></a>
                                                    <a asp-controller="Events" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger" aria-label="Delete Event"><i class="fa-regular fa-trash-can"></i></a>
                                                </div>
                                            }

                                        }
                                        </div>
                                       </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('.event-toggle').click(function (e) {
                e.preventDefault();
                var $row = $(this).closest('tr.table-row');
                var $cardInfoRow = $row.next('.card-info-row');
                $cardInfoRow.slideToggle();
                $row.find('.card-body').toggleClass('expanded');

                // Give focus to the card
                $cardInfoRow.find('.card').focus();

                $row.find('.card-body').toggleClass('expanded');
            });
            $('.price-toggle').click(function (e) { 
                e.preventDefault();
                var $cardInfoRow = $(this).closest('.card-info-row');
                $cardInfoRow.slideToggle();
                $(this).toggleClass('fa-chevron-up');
            });
        });

    </script>
}